@model TheOneCloth.Entities.Categories

@{
    ViewBag.Title = "Main_Cat_Edit";
    Layout = null;
    
}

@using (Html.BeginForm("Main_Cat_Edit", "Main_Category",FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return jQueryAjaxPost(this);", data_restUrl=Url.Action("Main_Cat_Edit", "Main_Category", new {id=0 }) }))
{
    <div class="row">
        @Html.AntiForgeryToken()
        <div class="col-md-6">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.ImageURL)
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Electronic" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @rows = "8", @cols = "50" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Status, new SelectList(new List<string>() { "Active", "Inactive" }), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsFeatured)
                            @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                        @if (Model.ID != 0)
                        {
                            <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("Main_Cat_Edit","Main_Category",new{id=0})',false)"><i class="fa fa-plus"></i> Add New</a>
                        }
                    </div>
                </div>
            </div>
        </div>
            <div class="col-md-6 ">
                <div class="form-group">
                    @Html.LabelFor(model => model.ImageURL,  new { @class = "control-label col-md-10 " })
                    <div class="col-md-10 text-md-right">
                        <img src="@Url.Content(Model.ImageURL)"  style="margin:10px" height="200" width="200" id="imagePreview" />
                        <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
                    </div>
                </div>
            </div>
    </div>
}

